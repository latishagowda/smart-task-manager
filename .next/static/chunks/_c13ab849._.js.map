{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBkkQ4mxpBuEAgV8AXVfK0Vj77dOFWzaXI\",\r\n  authDomain: \"smart-task-manager-189f4.firebaseapp.com\",\r\n  projectId: \"smart-task-manager-189f4\",\r\n  storageBucket: \"smart-task-manager-189f4.firebasestorage.app\",\r\n  messagingSenderId: \"959711081068\",\r\n  appId: \"1:959711081068:web:eb22141e2fd37be3055e49\",\r\n  measurementId: \"G-QYEB0H75PE\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\n\r\nexport { auth, googleProvider };\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,iBAAiB,IAAI,wNAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/context/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useEffect, useState, ReactNode } from 'react';\r\nimport { auth } from '../lib/firebase'; // âœ… relative import if no alias\r\nimport { onAuthStateChanged, User } from 'firebase/auth';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n});\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      setUser(firebaseUser);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA,yMAAwC,gCAAgC;AACxE;AAAA;;;AAJA;;;;AAWO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACxD,MAAM;IACN,SAAS;AACX;AAEO,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,kHAAA,CAAA,OAAI;sDAAE,CAAC;oBAC5C,QAAQ;oBACR,WAAW;gBACb;;YAEA;0CAAO,IAAM;;QACf;iCAAG,EAAE;IAEL,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAQ;kBAC1C;;;;;;AAGP;GAlBgB;KAAA","debugId":null}}]
}