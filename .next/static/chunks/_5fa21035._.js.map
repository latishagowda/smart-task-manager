{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/components/AuthForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { auth, googleProvider } from '@/lib/firebase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  sendPasswordResetEmail,\r\n} from 'firebase/auth';\r\nimport { useRouter } from 'next/navigation';\r\nimport './auth.css';\r\n\r\ninterface AuthFormProps {\r\n  type: 'login' | 'signup';\r\n}\r\n\r\nexport default function AuthForm({ type }: AuthFormProps) {\r\n  const router = useRouter();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    try {\r\n      if (type === 'login') {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n      }\r\n      router.push('/tasks');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await signInWithPopup(auth, googleProvider);\r\n      router.push('/tasks');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleForgotPassword = async () => {\r\n    if (!email) {\r\n      setError('Enter your email to reset password.');\r\n      return;\r\n    }\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      alert('Password reset email sent!');\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>{type === 'login' ? 'Login' : 'Sign Up'}</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <div className=\"password-wrapper\">\r\n          <input\r\n            type={showPassword ? 'text' : 'password'}\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span\r\n            onClick={() => setShowPassword((prev) => !prev)}\r\n            className=\"toggle-password\"\r\n          >\r\n            {showPassword ? 'Hide' : 'Show'}\r\n          </span>\r\n        </div>\r\n\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Processing...' : type === 'login' ? 'Login' : 'Sign Up'}\r\n        </button>\r\n      </form>\r\n\r\n      {type === 'login' && (\r\n        <>\r\n          <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n            Sign in with Google\r\n          </button>\r\n          <p onClick={handleForgotPassword} className=\"forgot-password\">\r\n            Forgot Password?\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAVA;;;;;;AAiBe,SAAS,SAAS,EAAE,IAAI,EAAiB;;IACtD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QACT,WAAW;QACX,IAAI;YACF,IAAI,SAAS,SAAS;gBACpB,MAAM,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE,OAAO;YAChD,OAAO;gBACL,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE,OAAO;YACpD;YACA,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO;QACtB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI;YACF,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE,kHAAA,CAAA,iBAAc;YAC1C,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,MAAM,uBAAuB;QAC3B,IAAI,CAAC,OAAO;YACV,SAAS;YACT;QACF;QACA,IAAI;YACF,MAAM,CAAA,GAAA,6NAAA,CAAA,yBAAsB,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE;YACnC,MAAM;QACR,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAI,SAAS,UAAU,UAAU;;;;;;0BAElC,6LAAC;gBAAK,UAAU;;kCACd,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,QAAQ;wBACR,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;kCAG1C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,MAAM,eAAe,SAAS;gCAC9B,aAAY;gCACZ,QAAQ;gCACR,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;0CAE7C,6LAAC;gCACC,SAAS,IAAM,gBAAgB,CAAC,OAAS,CAAC;gCAC1C,WAAU;0CAET,eAAe,SAAS;;;;;;;;;;;;kCAI7B,6LAAC;wBAAO,MAAK;wBAAS,UAAU;kCAC7B,UAAU,kBAAkB,SAAS,UAAU,UAAU;;;;;;;;;;;;YAI7D,SAAS,yBACR;;kCACE,6LAAC;wBAAO,WAAU;wBAAa,SAAS;kCAAmB;;;;;;kCAG3D,6LAAC;wBAAE,SAAS;wBAAsB,WAAU;kCAAkB;;;;;;;;YAMjE,uBAAS,6LAAC;gBAAE,WAAU;0BAAS;;;;;;;;;;;;AAGtC;GAhGwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/components/LogoutButton.tsx"],"sourcesContent":["// components/LogoutButton.tsx\r\n'use client';\r\n\r\nimport { auth } from '@/lib/firebase';\r\nimport { signOut } from 'firebase/auth';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function LogoutButton() {\r\n  const router = useRouter();\r\n\r\n  const handleLogout = async () => {\r\n    await signOut(auth);\r\n    router.refresh(); // force Next.js to update auth state\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        backgroundColor: 'crimson',\r\n        color: 'white',\r\n        border: 'none',\r\n        padding: '0.5rem 1rem',\r\n        marginTop: '1rem',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={handleLogout}\r\n    >\r\n      Logout\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;;AAG9B;AACA;AAAA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,kHAAA,CAAA,OAAI;QAClB,OAAO,OAAO,IAAI,qCAAqC;IACzD;IAEA,qBACE,6LAAC;QACC,OAAO;YACL,iBAAiB;YACjB,OAAO;YACP,QAAQ;YACR,SAAS;YACT,WAAW;YACX,QAAQ;QACV;QACA,SAAS;kBACV;;;;;;AAIL;GAvBwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useContext } from 'react';\r\nimport AuthForm from '@/components/AuthForm';\r\nimport { useRouter } from 'next/navigation';\r\nimport { AuthContext } from '../../context/Authcontext';\r\nimport LogoutButton from '@/components/LogoutButton';\r\n\r\nexport default function LoginPage() {\r\n  const { user, loading } = useContext(AuthContext);\r\n  const router = useRouter();\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  if (user) {\r\n    return (\r\n      <main style={{ padding: '2rem' }}>\r\n        <p>You are already logged in as <strong>{user.email}</strong>.</p>\r\n        <p>To log in with a different account, please log out first.</p>\r\n        <LogoutButton />\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main style={{ padding: '2rem' }}>\r\n      <AuthForm type=\"login\" />\r\n      <p style={{ marginTop: '1rem' ,textAlign: 'center' }}>\r\n        Don't have an account?{' '}\r\n        <a href=\"/signup\" style={{ color: 'blue', textDecoration: 'underline' }}>\r\n          Sign up here\r\n        </a>\r\n      </p>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,0HAAA,CAAA,cAAW;IAChD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IAEvB,IAAI,MAAM;QACR,qBACE,6LAAC;YAAK,OAAO;gBAAE,SAAS;YAAO;;8BAC7B,6LAAC;;wBAAE;sCAA6B,6LAAC;sCAAQ,KAAK,KAAK;;;;;;wBAAU;;;;;;;8BAC7D,6LAAC;8BAAE;;;;;;8BACH,6LAAC,8HAAA,CAAA,UAAY;;;;;;;;;;;IAGnB;IAEA,qBACE,6LAAC;QAAK,OAAO;YAAE,SAAS;QAAO;;0BAC7B,6LAAC,0HAAA,CAAA,UAAQ;gBAAC,MAAK;;;;;;0BACf,6LAAC;gBAAE,OAAO;oBAAE,WAAW;oBAAQ,WAAW;gBAAS;;oBAAG;oBAC7B;kCACvB,6LAAC;wBAAE,MAAK;wBAAU,OAAO;4BAAE,OAAO;4BAAQ,gBAAgB;wBAAY;kCAAG;;;;;;;;;;;;;;;;;;AAMjF;GA3BwB;;QAEP,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///C:/smart-task-manager/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}